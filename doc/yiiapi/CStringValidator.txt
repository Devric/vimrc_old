
*CStringValidator*   >> |CValidator| >> |CComponent|
==================

 CStringValidator validates that the attribute value is of certain length.

 Note, this validator should only be used with string-typed attributes.


PROPERTY DETAILS
------------------------------------------------------------------------------

<allowEmpty>				*CStringValidator::allowEmpty*
 (boolean) whether the attribute value can be null or empty. Defaults to true,
 meaning that if the attribute is empty, it is considered valid.

<encoding>				*CStringValidator::encoding*
 (string) the encoding of the string value to be validated (e.g. 'UTF-8').
 This property is used only when mbstring PHP extension is enabled. The value
 of this property will be used as the 2nd parameter of the mb_strlen()
 function. If this property is not set, the application charset will be used.
 If this property is set false, then strlen() will be used even if mbstring is
 enabled.

<is>					*CStringValidator::is*
 (integer) exact length. Defaults to null, meaning no exact length limit.

<max>					*CStringValidator::max*
 (integer) maximum length. Defaults to null, meaning no maximum limit.

<min>					*CStringValidator::min*
 (integer) minimum length. Defaults to null, meaning no minimum limit.

<tooLong>				*CStringValidator::tooLong*
 (string) user-defined error message used when the value is too long.

<tooShort>				*CStringValidator::tooShort*
 (string) user-defined error message used when the value is too short.



METHOD DETAILS
------------------------------------------------------------------------------

*CStringValidator::clientValidateAttribute*			 public
>
 clientValidateAttribute($object, $attribute)
<
(string) the client-side validation script.

 Returns the JavaScript needed for performing client-side validation.
    [object] (CModel) the data object being validated
    [attribute] (string) the name of the attribute to be validated.


*CStringValidator::validateAttribute*				 protected
>
 validateAttribute($object, $attribute)
<
(void)

 Validates the attribute of the object. If there is any error, the error
 message is added to the object.
    [object] (CModel) the object being validated
    [attribute] (string) the attribute being validated



 vim:tw=78:ts=8:ft=help:norl:
